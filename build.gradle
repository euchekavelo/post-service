plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
	id "org.sonarqube" version "4.4.1.3373"
	id 'jacoco'
}

group = 'ru.skillbox'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

sourceSets {
	integrationTest {
		java {
			compileClasspath += main.output + test.output
			runtimeClasspath += main.output + test.output
		}
	}
}

repositories {
	mavenCentral()
}

configurations {
	integrationTestImplementation.extendsFrom(testImplementation)
	integrationTestRuntimeOnly.extendsFrom(testRuntimeOnly)
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.postgresql:postgresql'
	implementation 'org.liquibase:liquibase-core'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation:3.3.0'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.testcontainers:postgresql'
	compileOnly 'org.projectlombok:lombok:1.18.30'
	annotationProcessor 'org.projectlombok:lombok:1.18.30'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'com.amazonaws:aws-java-sdk-s3:1.12.739'
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
	testImplementation "org.testcontainers:localstack:1.19.8"
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.register('integrationTest', Test) {
	description = "Running integration tests."
	testClassesDirs = sourceSets.integrationTest.output.classesDirs
	classpath = sourceSets.integrationTest.runtimeClasspath
	useJUnitPlatform()
}

sonar {
	properties {
		property 'sonar.login', System.getenv('SONAR_TOKEN_ACCESS')
		property 'sonar.host.url', System.getenv('SONAR_HOST_URL')
		property 'sonar.coverage.exclusions', 'src/main/java/ru/skillbox/postservice/model/**, ' +
				'src/main/java/ru/skillbox/postservice/dto/**, ' +
				'src/main/java/ru/skillbox/postservice/exception/**, ' +
				'src/main/java/ru/skillbox/postservice/config/**, ' +
				'src/main/java/ru/skillbox/postservice/mapper/**, ' +
				'src/main/java/ru/skillbox/postservice/*'
	}
}

test {
	finalizedBy integrationTest, jacocoTestReport
}

jacocoTestReport {
	executionData integrationTest
	reports {
		xml.required = true
	}
	dependsOn test, integrationTest
}